// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MathService.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MathRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathRequest) Reset()         { *m = MathRequest{} }
func (m *MathRequest) String() string { return proto.CompactTextString(m) }
func (*MathRequest) ProtoMessage()    {}
func (*MathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f319a0c38874f22, []int{0}
}

func (m *MathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathRequest.Unmarshal(m, b)
}
func (m *MathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathRequest.Marshal(b, m, deterministic)
}
func (m *MathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathRequest.Merge(m, src)
}
func (m *MathRequest) XXX_Size() int {
	return xxx_messageInfo_MathRequest.Size(m)
}
func (m *MathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MathRequest proto.InternalMessageInfo

func (m *MathRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *MathRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type MathResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathResponse) Reset()         { *m = MathResponse{} }
func (m *MathResponse) String() string { return proto.CompactTextString(m) }
func (*MathResponse) ProtoMessage()    {}
func (*MathResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f319a0c38874f22, []int{1}
}

func (m *MathResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathResponse.Unmarshal(m, b)
}
func (m *MathResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathResponse.Marshal(b, m, deterministic)
}
func (m *MathResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathResponse.Merge(m, src)
}
func (m *MathResponse) XXX_Size() int {
	return xxx_messageInfo_MathResponse.Size(m)
}
func (m *MathResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MathResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MathResponse proto.InternalMessageInfo

func (m *MathResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*MathRequest)(nil), "proto.MathRequest")
	proto.RegisterType((*MathResponse)(nil), "proto.MathResponse")
}

func init() { proto.RegisterFile("MathService.proto", fileDescriptor_6f319a0c38874f22) }

var fileDescriptor_6f319a0c38874f22 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf4, 0x4d, 0x2c, 0xc9,
	0x08, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x53, 0x4a, 0x9a, 0x5c, 0xdc, 0x20, 0xb9, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x1e,
	0x2e, 0xc6, 0x44, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0xc6, 0x44, 0x10, 0x2f, 0x49, 0x82,
	0x09, 0xc2, 0x4b, 0x52, 0x52, 0xe3, 0xe2, 0x81, 0x28, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15,
	0x12, 0xe3, 0x62, 0x2b, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x81, 0x6a, 0x80, 0xf2, 0x8c, 0x6e, 0x31,
	0x42, 0xcc, 0x84, 0xda, 0x27, 0xa4, 0xc7, 0xc5, 0xec, 0x98, 0x92, 0x22, 0x24, 0x04, 0xb1, 0x58,
	0x0f, 0xc9, 0x3a, 0x29, 0x61, 0x14, 0x31, 0xa8, 0xb9, 0x86, 0x5c, 0x6c, 0x2e, 0x99, 0x65, 0x99,
	0x29, 0xa9, 0xc4, 0x6b, 0x31, 0xe6, 0xe2, 0xf0, 0x2d, 0xcd, 0x29, 0xc9, 0x2c, 0xc8, 0xa9, 0x24,
	0x49, 0x53, 0x70, 0x69, 0x52, 0x49, 0x51, 0x62, 0x72, 0x09, 0xd1, 0x9a, 0x92, 0xd8, 0xc0, 0x62,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x48, 0xad, 0x0a, 0x52, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MathServiceClient is the client API for MathService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathServiceClient interface {
	Add(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error)
	Divide(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error)
	Multiply(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error)
	Subtract(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error)
}

type mathServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMathServiceClient(cc grpc.ClientConnInterface) MathServiceClient {
	return &mathServiceClient{cc}
}

func (c *mathServiceClient) Add(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error) {
	out := new(MathResponse)
	err := c.cc.Invoke(ctx, "/proto.MathService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathServiceClient) Divide(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error) {
	out := new(MathResponse)
	err := c.cc.Invoke(ctx, "/proto.MathService/Divide", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathServiceClient) Multiply(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error) {
	out := new(MathResponse)
	err := c.cc.Invoke(ctx, "/proto.MathService/Multiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathServiceClient) Subtract(ctx context.Context, in *MathRequest, opts ...grpc.CallOption) (*MathResponse, error) {
	out := new(MathResponse)
	err := c.cc.Invoke(ctx, "/proto.MathService/Subtract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MathServiceServer is the server API for MathService service.
type MathServiceServer interface {
	Add(context.Context, *MathRequest) (*MathResponse, error)
	Divide(context.Context, *MathRequest) (*MathResponse, error)
	Multiply(context.Context, *MathRequest) (*MathResponse, error)
	Subtract(context.Context, *MathRequest) (*MathResponse, error)
}

// UnimplementedMathServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMathServiceServer struct {
}

func (*UnimplementedMathServiceServer) Add(ctx context.Context, req *MathRequest) (*MathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedMathServiceServer) Divide(ctx context.Context, req *MathRequest) (*MathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Divide not implemented")
}
func (*UnimplementedMathServiceServer) Multiply(ctx context.Context, req *MathRequest) (*MathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multiply not implemented")
}
func (*UnimplementedMathServiceServer) Subtract(ctx context.Context, req *MathRequest) (*MathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subtract not implemented")
}

func RegisterMathServiceServer(s *grpc.Server, srv MathServiceServer) {
	s.RegisterService(&_MathService_serviceDesc, srv)
}

func _MathService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MathService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Add(ctx, req.(*MathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MathService_Divide_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Divide(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MathService/Divide",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Divide(ctx, req.(*MathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MathService_Multiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Multiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MathService/Multiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Multiply(ctx, req.(*MathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MathService_Subtract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Subtract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MathService/Subtract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Subtract(ctx, req.(*MathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MathService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MathService",
	HandlerType: (*MathServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _MathService_Add_Handler,
		},
		{
			MethodName: "Divide",
			Handler:    _MathService_Divide_Handler,
		},
		{
			MethodName: "Multiply",
			Handler:    _MathService_Multiply_Handler,
		},
		{
			MethodName: "Subtract",
			Handler:    _MathService_Subtract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MathService.proto",
}
